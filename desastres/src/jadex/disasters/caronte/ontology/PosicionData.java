/*
 * PosicionData.java
 *
 * Generated by Protege plugin Beanynizer. 
 * Changes will be lost! 
 */
package disasters.caronte.ontology;



/**
 *  Java class for concept Posicion of caronte ontology.
 */
public abstract class PosicionData implements java.beans.BeanInfo 
{
	//-------- constants ----------

	//-------- attributes ----------

	/** Attribute for slot latitud. */
	protected  double  latitud;

	/** Attribute for slot longitud. */
	protected  double  longitud;

	/** Attribute for slot planta. */
	protected  int  planta;

	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>Posicion</code>.
	 */
	public PosicionData()  {
	}

	//-------- accessor methods --------

	/**
	 *  Get the latitud of this Posicion.
	 * @return latitud
	 */
	public double  getLatitud() {
		return this.latitud;
	}

	/**
	 *  Set the latitud of this Posicion.
	 * @param latitud the value to be set
	 */
	public void  setLatitud(double latitud) {
		this.latitud = latitud;
	}

	/**
	 *  Get the longitud of this Posicion.
	 * @return longitud
	 */
	public double  getLongitud() {
		return this.longitud;
	}

	/**
	 *  Set the longitud of this Posicion.
	 * @param longitud the value to be set
	 */
	public void  setLongitud(double longitud) {
		this.longitud = longitud;
	}

	/**
	 *  Get the planta of this Posicion.
	 * @return planta
	 */
	public int  getPlanta() {
		return this.planta;
	}

	/**
	 *  Set the planta of this Posicion.
	 * @param planta the value to be set
	 */
	public void  setPlanta(int planta) {
		this.planta = planta;
	}

	//-------- bean related methods --------

	/** The property descriptors, constructed on first access. */
	private java.beans.PropertyDescriptor[] pds = null;

	/**
	 *  Get the bean descriptor.
	 *  @return The bean descriptor.
	 */
	public java.beans.BeanDescriptor getBeanDescriptor() {
		return null;
	}

	/**
	 *  Get the property descriptors.
	 *  @return The property descriptors.
	 */
	public java.beans.PropertyDescriptor[] getPropertyDescriptors() {
		if(pds==null) {
			try {
				pds = new java.beans.PropertyDescriptor[]{
					 new java.beans.PropertyDescriptor("latitud", this.getClass(), "getLatitud", "setLatitud")
					, new java.beans.PropertyDescriptor("longitud", this.getClass(), "getLongitud", "setLongitud")
					, new java.beans.PropertyDescriptor("planta", this.getClass(), "getPlanta", "setPlanta")
				};
			}
			catch(Exception e) {
				e.printStackTrace();
			}
		}
		return pds;
	}

	/**
	 *  Get the default property index.
	 *  @return The property index.
	 */
	public int getDefaultPropertyIndex() {
		return -1;
	}

	/**
	 *  Get the event set descriptors.
	 *  @return The event set descriptors.
	 */
	public java.beans.EventSetDescriptor[] getEventSetDescriptors() {
		return null;
	}

	/**
	 *  Get the default event index.
	 *  @return The default event index.
	 */
	public int getDefaultEventIndex() {
		return -1;
	}

	/**
	 *  Get the method descriptors.
	 *  @return The method descriptors.
	 */
	public java.beans.MethodDescriptor[] getMethodDescriptors() {
		return null;
	}

	/**
	 *  Get additional bean info.
	 *  @return Get additional bean info.
	 */
	public java.beans.BeanInfo[] getAdditionalBeanInfo() {
		return null;
	}

	/**
	 *  Get the icon.
	 *  @return The icon.
	 */
	public java.awt.Image getIcon(int iconKind) {
		return null;
	}

	/**
	 *  Load the image.
	 *  @return The image.
	 */
	public java.awt.Image loadImage(final String resourceName) {
		try {
			final Class c = getClass();
			java.awt.image.ImageProducer ip = (java.awt.image.ImageProducer)
				java.security.AccessController.doPrivileged(new java.security.PrivilegedAction() {
					public Object run(){
						java.net.URL url;
						if((url = c.getResource(resourceName))==null) {
							return null;
						}
						else {
							try {
								return url.getContent();
							}
							catch(java.io.IOException ioe) {
								return null;
							}
						}
					}
				});
			if(ip==null)
				return null;
			java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
			return tk.createImage(ip);
		}
		catch(Exception ex) {
			return null;
		}
	}

	//-------- additional methods --------

	/**
	 *  Get a string representation of this Posicion.
	 *  @return The string representation.
	 */
	public String toString() {
		return "Posicion("
           + ")";
	}

}
