/*
 * $class.javaName.java
 *
 * Generated by Protege plugin Beanynizer. 
 * This class implements the functionality of Herido.
 * Feel free to change.
 *
 */
package disasters.caronte.ontology;

import disasters.People;

/**
 * Editable Java class for concept <code>Herido</code> of caronte ontology.
 */
public class Herido extends HeridoData{
	//-------- constructors --------
	/**
	 * Default Constructor.<br>
	 * Create a new <code>Herido</code>.
	 */
	public Herido(){
		// Empty constructor required for JavaBeans (do not remove).
	}

	/**
	 * Clone Constructor.<br>
	 * Create a new <code>Herido</code>.<br>
	 * Copy all attributes from <code>proto</code> to this instance.
	 *
	 * @param proto The prototype instance.
	 */
	public Herido(Herido proto) {
		setDescripcion(proto.getDescripcion());
		setGravedad(proto.getGravedad());
		setId(proto.getId());
		setInfo(proto.getInfo());
		setMovilidad(proto.getMovilidad());
		setPosicion(proto.getPosicion());
	}

	//-------- custom code --------
	/**
	 * 
	 * @param id
	 * @param descripcion
	 * @param info
	 * @param gravedad
	 * @param posicion
	 * @param movilidad 
	 */
	public Herido(int id, String descripcion, String info, String gravedad, Posicion posicion, String movilidad){
		setId(id);
		setDescripcion(descripcion);
		setInfo(info);
		setGravedad(gravedad);
		setPosicion(posicion);
		setMovilidad(movilidad);
	}
	
	/**
	 * 
	 * @param per 
	 */
	 public Herido(People per){
		setId(per.getId());
		setDescripcion(per.getDescription());
		setInfo(per.getInfo());
		setGravedad(per.getSize());
		setPosicion(new Posicion(new Float(per.getLatitud()), new Float(per.getLongitud()), per.getFloor()));
		setMovilidad(per.getTraffic());
	}
	
	//-------- Object methods -----
	/**
	 * Get a string representation of this <code>Herido</code>.
	 *
	 * @return The string representation.
	 */
	public String toString(){
		return "Herido(id=" + getId() + "descripcion=" + getDescripcion() + "info=" + getInfo() +
			"gravedad=" + getGravedad() + "posicion=" + getPosicion() + "movilidad=" + getMovilidad() + ")";
	}

	/**
	 * Get a clone of this <code>Herido</code>.
	 *
	 * @return a shalow copy of this instance.
	 */
	public Object clone(){
		return new Herido(this);
	}

	/**
	 * Test the equality of this <code>Herido</code> and an object <code>obj</code>.
	 *
	 * @param obj the object this test will be performed with
	 * @return false if <code>obj</code> is not of <code>Herido</code> class,
	 *         true if all attributes are equal.
	 */
	public boolean equals(Object obj){
		if(obj instanceof Herido){
			Herido cmp = (Herido) obj;
			if(getDescripcion() != cmp.getDescripcion() &&
					(getDescripcion() == null || !getDescripcion().equals(cmp.getDescripcion()))){
				return false;
			}
			if(getGravedad() != cmp.getGravedad() &&
					(getGravedad() == null || !getGravedad().equals(cmp.getGravedad()))){
				return false;
			}
			if(getId() != cmp.getId()) {
				return false;
			}
			if(getInfo() != cmp.getInfo() &&
					(getInfo() == null || !getInfo().equals(cmp.getInfo()))){
				return false;
			}
			if(getMovilidad() != cmp.getMovilidad() &&
					(getMovilidad() == null || !getMovilidad().equals(cmp.getMovilidad()))){
				return false;
			}
			if(getPosicion() != cmp.getPosicion() &&
					(getPosicion() == null || !getPosicion().equals(cmp.getPosicion()))){
				return false;
			}
			return true;
		}
		return false;
	}
}