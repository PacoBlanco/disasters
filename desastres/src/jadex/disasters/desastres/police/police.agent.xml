<!--
  <h3>Policia</h3>

  Agente que patrulla y acude a los desastres en Calasparra
-->
<agent xmlns="http://jadex.sourceforge.net/jadex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="police" package="disasters.desastres.police">

	<imports>
		<import>disasters.*</import>
		<import>disasters.desastres.Environment</import>
		<import>jadex.base.fipa.SFipa</import>
	</imports>

	<beliefs>
		<!-- Creamos el agente como instancia del Entorno. Por defecto, en el centro de Madrid -->
		<belief name="env" class="Environment">
			<fact>Environment.getInstance(Environment.POLICIA, $scope.getAgentName(), $beliefbase.Comisaria, $scope.getComponentIdentifier())</fact>
		</belief>
		<!-- Definimos el centro de Madrid -->
		<belief name="Comisaria" class="Position">
			<fact>new Position(40.421565, -3.710095)</fact> <!-- comisaria centro de madrid: calle leganitos, 19 -->
			<!-- Pagina con todas las comisarias: http://www.valledelkas.com/servicios/InformacionCiudadana/comisarias.asp-->
		</belief>
		<!-- Posicion del agente evaluada dinamicamente -->
		<belief name="pos" class="Position">
			<fact>$beliefbase.env.getAgent($scope.getAgentName()).getPosition()</fact>
		</belief>
		<!-- desastre que esta atendiendo-->
		<!--belief name="desastreActual" class="Integer" evaluationmode="dynamic">
			<fact>$beliefbase.env.getAgentPosition($scope.getAgentName())</fact>
		</belief-->
	</beliefs>

	<goals>
		<!-- Objetivo: patrullar por el mapa indefinidamente -->
		<performgoal name="patrulla" retry="true" exclude="never"/>
		<performgoal name="comisaria" retry="true" exclude="never"/>
		<!-- Objetivo: Llega un desastre que atender y el policia va a dar soporte hasta que se solucione -->
		<achievegoal name="llega-desastre"/>
	</goals>

	<plans>
		<!-- Plan para patrullar -->
		<plan name="patrulla-plan">
			<body class="PatrullaPlan"/>
			<trigger>
				<goal ref="patrulla"/>
			</trigger>
		</plan>
		<!-- Plan para esperar en la comisaria -->
		<plan name="comisaria-plan">
			<body class="ComisariaPlan"/>
			<trigger>
				<goal ref="comisaria"/>
			</trigger>
		</plan>
		<!-- Plan para llegar al lugar de un desastre y esperar a que se solucione -->
		<plan name="llega-desastre-plan">
			<body class="LlegaDesastrePlan"/>
			<trigger>
				<messageevent ref="aviso"/>
			</trigger>
		</plan>
		<plan name="eliminar_plan">
			<body class="EliminarPlan"/>
			<parameter name="tipo" class="String">
				<value>Environment.POLICIA</value>
			</parameter>
		</plan>
	</plans>

	<events>
		<messageevent name="aviso" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>
		<messageevent name="ack_aviso" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
	</events>

 	<!-- Inicialmente activamos el objetivo con nombre patrullar -->
	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="patrulla"/>
			</goals>
			<plans>
				<endplan ref="eliminar_plan"/>
			</plans>
		</configuration>
	</configurations>
</agent>
