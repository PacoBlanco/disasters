<!--
  <h3>Central</h3>

  Agente que recoge heridos y los lleva al hospital
-->
<agent xmlns="http://jadex.sourceforge.net/jadex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="central" package="disasters.desastres.central">

	<imports>
		<import>disasters.*</import>
		<import>disasters.desastres.Environment</import>
		<import>jadex.base.fipa.SFipa</import>
	</imports>

	<beliefs>
		<!-- Creamos el agente como instancia del Entorno. Por defecto, una posicion en el centro de Madrid -->
		<belief name="env" class="Environment">
			<fact>Environment.getInstance(Environment.CENTRAL, $scope.getAgentName(), $beliefbase.centralMadrid, $scope.getComponentIdentifier())</fact>
		</belief>
		<!-- Definimos la posicion de la central en Madrid -->
		<belief name="centralMadrid" class="Position">
			<fact>new Position(40.45, -3.70)</fact> <!-- PosiciÃ³n aleatoria de la central -->
		</belief>
		<!-- Poscion del agente evaluada dinamicamente-->
		<belief name="pos" class="Position">
			<fact>$beliefbase.env.getAgentPosition($scope.getAgentName())</fact>
		</belief>
 		<!-- id del desastre que tienen que atender-->
		<belief name="desastreActual" class="Integer"> <!-- evaluationmode="dynamic" -->
			<fact>0</fact>
		</belief>
	</beliefs>

	<goals>
		<!-- Objetivo para buscar desastres a menos que se este tratando uno -->
		<performgoal name="buscaDesastre"/> <!-- retry="true" exclude="never"/> -->
		<!-- Objetivo para esperar a la finalizacion de un desastre -->
		<achievegoal name="esperaSolucion"/>
		<achievegoal name="volverABuscar"/>
	</goals>

	<plans>
		<!-- Plan para buscar desastres -->
		<plan name="buscaDesastre-plan">
			<body class="BuscaDesastrePlan"/>
			<trigger>
				<goal ref="buscaDesastre"/>
			</trigger>
		</plan>
		<!-- Plan para esperar la solucion del Desastre -->
		<plan name="esperaSolucion-plan">
			<body class="EsperaSolucionPlan"/>
			<trigger>
				<goal ref="esperaSolucion"/>
			</trigger>
		</plan>
		<plan name="volverABuscar-plan">
			<body class="VolverABuscarPlan"/>
			<trigger>
				<messageevent ref="terminado"/>
			</trigger>
		</plan>
		<plan name="eliminar_plan">
			<body class="EliminarPlan"/>
			<parameter name="tipo" class="String">
				<value>Environment.CENTRAL</value>
			</parameter>
		</plan>
	</plans>

	<events>
		<messageevent name="aviso" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>
		<messageevent name="ack_aviso" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>

		<messageevent name="terminado" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>
		<messageevent name="ack_terminado" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
	</events>

 	<!-- Inicialmente activamos el objetivo con nombre hospital -->
	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="buscaDesastre"/>
			</goals>
			<plans>
				<endplan ref="eliminar_plan"/>
			</plans>
		</configuration>
	</configurations>
</agent>