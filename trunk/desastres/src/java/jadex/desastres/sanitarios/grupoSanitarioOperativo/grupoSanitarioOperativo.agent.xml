<!--
	<h3>Grupo sanitario operativo</h3>
-->

<agent xmlns="http://jadex.sourceforge.net/jadex-bdi"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                       http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
       name="grupoSanitarioOperativo"
	   package="jadex.desastres.sanitarios.grupoSanitarioOperativo">

	<imports>
		<import>jadex.desastres.*</import>
		<import>jadex.bdi.runtime.*</import>
		<import>jadex.base.fipa.*</import>
		<import>jadex.bridge.fipa.ComponentIdentifier</import>
		<import>java.util.logging.*</import>
		<import>jadex.bdi.planlib.protocols.request.Request</import>
		<import>jadex.bdi.planlib.df.DF</import>
		<import>jadex.commons.*</import>
		<import>jadex.commons.service.*</import>
	</imports>

	<capabilities>
		<capability name="procap" file="Request"/>
		<capability name="dfcap" file="DF"/>
	</capabilities>

	<beliefs>
		<!-- Creamos el agente como instancia del Entorno -->
		<belief name="env" class="Environment">
			<fact>Environment.getInstance(Environment.GSO, $scope.getAgentName(), $beliefbase.hospitalMadrid)</fact>
		</belief>

		<!-- Definimos la posicion del hospital de Madrid -->
		<belief name="hospitalMadrid" class="Position">
			<fact>new Position(40.418702, -3.670573)</fact> <!-- Gregorio Maranon -->
		</belief>

		<!-- Poscion del agente evaluada dinamicamente -->
		<!--<belief name="pos" class="Position" evaluationmode="dynamic">
			<fact>$beliefbase.env.getAgentPosition($agent.getName())</fact>
		</belief>-->
		<belief name="agente" class="WorldObject">
			<fact>$beliefbase.env.getAgent($scope.getAgentName())</fact>
		</belief>
		<belief name="pos" class="Position" evaluationmode="dynamic">
			<fact>$beliefbase.agente.getPosition()</fact>
		</belief>
	</beliefs>

	<goals>
		<achievegoalref name="rp_initiate">
			<concrete ref="procap.rp_initiate"/>
		</achievegoalref>
		<achievegoalref name="df_search">
			<concrete ref="dfcap.df_search"/>
		</achievegoalref>
		<maintaingoalref name="df_keep_registered">
			<concrete ref="dfcap.df_keep_registered"/>
		</maintaingoalref>
		
		<achievegoal name="primerosAuxilios"/>
	</goals>

	<plans>
		<!-- Es fundamental la primera evaluacion de la gravedad por parte de medicos
			 o personal sanitario avanzado -->
		<plan name="triage-plan">
			<body class="TriagePlan"/>
			<trigger>
				<messageevent ref="aviso_coor"/>
			</trigger>
		</plan>

		<!-- Primeros auxilios sobre aquellas victimas que necesiten de una accion
			 inmediata antes de poder ser trasladados al Area de Rescate -->
		<plan name="primerosAuxilios-plan">
			<body class="PrimerosAuxiliosPlan"/>
			<trigger>
				<goal ref="primerosAuxilios"/>
			</trigger>
		</plan>
	</plans>

	<events>
		<messageevent name="aviso_coor" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>
		<messageevent name="ack_aviso_coor" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>

		<messageevent name="triage" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>
		<messageevent name="ack_triage" direction="recieve" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
	</events>

	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="df_keep_registered">
					<parameter ref="description">
						<value>
							$propertybase.getProperty("dfservice")
								.createDFComponentDescription(null, $propertybase.getProperty("dfservice")
								.createDFServiceDescription("gso_service", "grupoSanitarioOperativo", "GSI DIT UPM"))
 						</value>
					</parameter>
					<!--<parameter ref="leasetime">
						<value>20000</value>
					</parameter>-->
				</initialgoal>
			</goals>
		</configuration>
	</configurations>

	<properties>
		<property name="dfservice" class="IFuture">SServiceProvider.getService($scope.getServiceProvider(),IDF.class)</property>
	</properties>

</agent>