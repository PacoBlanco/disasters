/*
 * $class.javaName.java
 *
 * Generated by Protege plugin Beanynizer. 
 * This class implements the functionality of Desastre.
 * Feel free to change.
 *
 */
package jadex.desastres;

import jadex.commons.SReflect;

/**
 *  Editable Java class for concept <code>Desastre</code> of caronte ontology.
 */
public class Desastre extends DesastreData{
	//-------- constructors --------

	/**
	 *  Default Constructor. <br>
	 *  Create a new <code>Desastre</code>.
	 */
	public Desastre() {
		// Empty constructor required for JavaBeans (do not remove).
	}

	/**
	 *  Clone Constructor. <br>
	 *  Create a new <code>Desastre</code>.<br>
	 *  Copy all attributes from <code>proto</code> to this instance.
	 *
	 *  @param proto The prototype instance.
	 */
	public Desastre(Desastre proto) {
		setEstadoEmergencia(proto.getEstadoEmergencia());
		setEstadoHeridos(proto.getEstadoHeridos());
		setId(proto.getId());
	}

	//-------- custom code --------
	/**
	 *  Constructor<br>
	 *  Create a new <code>Desastre</code>.<br>
	 *
	 *  @param id id desastre.
	 *  @param emergencia Estado emergencia
	 *  @param heridos Estado heridos
	 */
	public Desastre(int id, String emergencia, String heridos) {
		setEstadoEmergencia(emergencia);
		setEstadoHeridos(heridos);
		setId(id);
	}

	//-------- Object methods -----
	/**
	 *  Get a string representation of this <code>Desastre</code>.
	 *  @return The string representation.
	 */
	public String toString() {
		//return "Desastre("
				//+ ")";
		return SReflect.getInnerClassName(getClass())+
				" id="+getId()+", estadoemergencia="+getEstadoEmergencia()+", heridos="+getEstadoHeridos();
	}

	/**
	 *  Get a clone of this <code>Desastre</code>.
	 *  @return a shalow copy of this instance.
	 */
	/*public Object clone() {
		return new Desastre(this);
	}*/

	/**
	 *  Test the equality of this <code>Desastre</code>
	 *  and an object <code>obj</code>.
	 *
	 *  @param obj the object this test will be performed with
	 *  @return false if <code>obj</code> is not of <code>Desastre</code> class,
	 *          true if all attributes are equal.
	 */
	public boolean equals(Object obj) {
		if (obj instanceof Desastre) {
			Desastre cmp = (Desastre) obj;
			if (getEstadoEmergencia() != cmp.getEstadoEmergencia()
					&& (getEstadoEmergencia() == null || !getEstadoEmergencia().equals(cmp.getEstadoEmergencia()))) {
				return false;
			}
			if (getEstadoHeridos() != cmp.getEstadoHeridos()
					&& (getEstadoHeridos() == null || !getEstadoHeridos().equals(cmp.getEstadoHeridos()))) {
				return false;
			}
			if (getId() != cmp.getId()) {
				return false;
			}
			return true;
		}
		return false;
	}
}
