<!--
  <h3>Otro personal</h3>
-->

<agent xmlns="http://jadex.sourceforge.net/jadex-bdi"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                       http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
       name="nurse"
	   package="jadex.desastres.caronte.otherStaff">

	<imports>
		<import>jadex.base.fipa.*</import>
		<import>jadex.bdi.planlib.protocols.request.Request</import>
		<import>jadex.bdi.planlib.df.DF</import>
		<import>jadex.bridge.fipa.ComponentIdentifier</import>
		<import>jadex.commons.*</import>
		<import>jadex.commons.service.*</import>
		<import>jadex.util.*</import>
		<import>jadex.runtime.*</import>
		<import>jadex.desastres.*</import>
	</imports>

	<capabilities>
		<capability name="procap" file="Request"/>
		<capability name="dfcap" file="DF"/>
	</capabilities>

	<beliefs>
		<!-- Creamos el agente como instancia del Entorno. Por defecto, en la residencia -->
		<belief name="env" class="Environment">
			<fact>Environment.getInstance(Environment.OTRO_PERSONAL, $scope.getAgentName(),$beliefbase.residencia)</fact>
		</belief>
		
		<!-- Definimos la posicion de la residencia -->
		<belief name="residencia" class="Position">
			<fact>new Position(38.232272, -1.698925)</fact>
		</belief>

		<!-- Posicion del agente -->
		<belief name="pos" class="Position">
			<fact>$beliefbase.env.getAgent($scope.getAgentName()).getPosition()</fact>
		</belief>

		<!-- ID del desastre que atiende -->
		<belief name="idEmergencia" class="Integer">
			<fact>0</fact>
		</belief>
	</beliefs>

	<goals>
		<achievegoalref name="rp_initiate">
			<concrete ref="procap.rp_initiate"/>
		</achievegoalref>
		<achievegoalref name="df_search">
			<concrete ref="dfcap.df_search"/>
		</achievegoalref>
		<maintaingoalref name="df_keep_registered">
			<concrete ref="dfcap.df_keep_registered"/>
		</maintaingoalref>

		<achievegoal name="registro"/>
	</goals>

	<plans>
		<plan name="registro-plan">
			<body class="RegistroPlan"/>
			<trigger>
				<goal ref="registro"/>
			</trigger>
		</plan>
	</plans>

	<events>
	</events>

	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="df_keep_registered">
					<parameter ref="description">
						<value>
							$propertybase.getProperty("dfservice")
								.createDFComponentDescription(null, $propertybase.getProperty("dfservice")
								.createDFServiceDescription("otherStaff_service", "otherStaff", "GSI DIT UPM"))
						</value>
					</parameter>
				</initialgoal>
				<initialgoal ref="registro"/>
			</goals>
		</configuration>
	</configurations>

	<properties>
		<property name="dfservice" class="IFuture">SServiceProvider.getService($scope.getServiceProvider(),IDF.class)</property>
	</properties>
</agent>