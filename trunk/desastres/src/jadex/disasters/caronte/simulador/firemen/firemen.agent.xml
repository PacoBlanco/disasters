<!--
	<h3>Bombero</h3>

	Agente que acude a cualquier desastre para ayudar a solucionarlo
-->
<agent xmlns="http://jadex.sourceforge.net/jadex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://jadex.sourceforge.net/jadex http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
		name="firemen" package="disasters.caronte.simulador.firemen">
	<imports>
		<import>disasters.*</import>
		<import>disasters.caronte.Entorno</import>
		<import>jadex.base.fipa.SFipa</import>
	</imports>

	<beliefs>
		<!-- Creamos el agente como instancia del Entorno. Por defecto, en el centro de Jumilla -->
		<belief name="env" class="Entorno">
			<fact>Entorno.getInstance(Entorno.BOMBERO, $scope.getAgentName(), $beliefbase.parqueDeBomberos, $scope.getComponentIdentifier())</fact>
		</belief>
		<!-- Definimos la posicion de la Estacion de bomberos de Jumilla -->
		<belief name="parqueDeBomberos" class="Position">
			<!--<fact>new Position(38.111020, -1.865018)</fact>-->
			<fact>new Position(38.21602, -1.72306)</fact> <!-- TEMPORAL -->
		</belief>
		<!-- Poscion del agente evaluada -->
		<belief name="pos" class="Position">
			<fact>$beliefbase.env.getAgent($scope.getAgentName()).getPosition()</fact>
		</belief>
 		<!-- id del herido atrapado si lo hay-->
		<!--<belief name="idAtrapado" class="Integer" evaluationmode="dynamic">
			<fact>$beliefbase.env.getAgentPosition($scope.getAgentName())</fact>
		</belief>-->
 		<!-- desastre que esta atendiendo-->
		<belief name="idEmergencia" class="Integer"> <!-- evaluationmode="dynamic"> -->
			<fact>0</fact>
		</belief>
		<!--belief name="assignedId" class="Integer" evaluationmode="dynamic">
			<fact>1</fact>
		</belief-->
	</beliefs>

	<goals>
		<!-- Objetivo para estar en la estacion de bomberos a menos que haya ocurrido algun desastre.  -->
		<performgoal name="estacionBomberos" retry="true" exclude="never"/>
		<!-- Objetivo para socorrer algun desastre que haya ocurrido -->
		<achievegoal name="bomberoEnDesastre"/>
	</goals>

	<plans>
		<!-- Plan para ir a la estacion de bomberos a menos que haya ocurrido algun desastre. -->
		<plan name="estacionBomberos-plan">
			<body class="EstacionBomberosPlan"/>
			<trigger>
				<goal ref="estacionBomberos"/>
			</trigger>
		</plan>
		<!-- Plan para ir a socorrer algun desastre que haya ocurrido. -->
		<plan name="bomberoEnDesastre-plan">
			<body class="BomberoEnDesastrePlan"/>
			<trigger>
				<messageevent ref="aviso"/>
			</trigger>
		</plan>
		<plan name="eliminar_plan">
			<body class="EliminarPlan"/>
			<parameter name="tipo" class="String">
				<value>Entorno.BOMBERO</value>
			</parameter>
		</plan>
	</plans>

	<events>
		<messageevent name="aviso" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
			<parameter name="ontology" class="String" direction="fixed">
				<value>CaronteOntology.ONTOLOGY_NAME</value>
			</parameter>
			<match>$content instanceof Desastre</match>
		</messageevent>
		<messageevent name="ack_aviso" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>

		<messageevent name="terminado" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>
		<messageevent name="ack_terminado" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
	</events>

	<!-- Inicialmente activamos el objetivo con nombre estacionBomberos -->
	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="estacionBomberos"/>
			</goals>
			<plans>
				<endplan ref="eliminar_plan"/>
			</plans>
		</configuration>
	</configurations>
</agent>