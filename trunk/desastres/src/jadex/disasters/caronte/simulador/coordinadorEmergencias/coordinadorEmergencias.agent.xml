<!--
  <h3>Coordinador de emergencias</h3>


-->
<agent xmlns="http://jadex.sourceforge.net/jadex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="coordinadorEmergencias" package="disasters.caronte.simulador.coordinadorEmergencias">

	<imports>
		<import>jadex.base.fipa.*</import>
		<import>jadex.bdi.planlib.protocols.request.Request</import>
		<import>jadex.bdi.planlib.df.DF</import>
		<import>jadex.bdi.runtime.*</import>
		<import>jadex.bridge.fipa.ComponentIdentifier</import>
		<import>jadex.commons.*</import>
		<import>jadex.commons.service.*</import>
		<import>jadex.desastres.*</import>
		<import>java.util.logging.*</import>
	</imports>

	<capabilities>
		<capability name="procap" file="Request"/>
		<capability name="dfcap" file="DF"/>
	</capabilities>

	<beliefs>
		<!-- Creamos el agente como instancia del Entorno. Por defecto, una posicion en el centro de Calasparra -->
		<belief name="env" class="Environment">
			<fact>Environment.getInstance(Environment.COORDINADOR_EMERGENCIAS, $scope.getAgentName(), $beliefbase.residencia)</fact>
		</belief>
		
		<!-- Definimos la posicion de la residencia -->
		<belief name="residencia" class="Position">
			<fact>new Position(38.232272, -1.698925)</fact>
		</belief>

		<!-- id del desastre que tienen que atender-->
		<belief name="desastreActual" class="Integer"> <!-- evaluationmode="dynamic" -->
			<fact>0</fact>
		</belief>
	</beliefs>

	<goals>
		<achievegoalref name="rp_initiate">
			<concrete ref="procap.rp_initiate"/>
		</achievegoalref>
		<achievegoalref name="df_search">
			<concrete ref="dfcap.df_search"/>
		</achievegoalref>
		<maintaingoalref name="df_keep_registered">
			<concrete ref="dfcap.df_register"/>
		</maintaingoalref>
		
		<!-- Objetivo para encontrar emergencias  -->
		<performgoal name="encontrarEmergencia" retry="true" exclude="never"/>

		<achievegoal name="avisarAgentes"/>
		
		<!-- Objetivo para esperar a la finalizacion de un desastre -->
		<achievegoal name="esperarSolucion"/>
	</goals>

	<plans>
		<!-- Plan para encontrar emergencias -->
		<plan name="encontrarEmergencia-plan">
			<body class="EncontrarEmergenciaPlan"/>
			<trigger>
				<goal ref="encontrarEmergencia"/>
			</trigger>
		</plan>

		<!-- Plan para esperar la solucion del Desastre -->
		<plan name="esperarSolucion-plan">
			<body class="EsperarSolucionPlan"/>
			<trigger>
				<goal ref="esperarSolucion"/>
			</trigger>
		</plan>

		<plan name="avisarAgentes-plan">
			<body class="AvisarAgentesPlan"/>
			<trigger>
				<goal ref="avisarAgentes"/>
			</trigger>
		</plan>
	</plans>

	<events>
		<messageevent name="aviso_geriatrico" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<parameter name="language" class="String" direction="fixed">
				<value>SFipa.JADEX_XML</value>
 			</parameter>
			<parameter name="ontology" class="String" direction="fixed">
				<value>CaronteOntology.ONTOLOGY_NAME</value>
			</parameter>
		</messageevent>
		<messageevent name="ack_aviso_geriatrico" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<match>$content instanceof String &amp;&amp; ((String)$content).startsWith("ack_aviso_geriatrico")</match>
		</messageevent>

		<messageevent name="estadoEmergencia" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<match>$content instanceof String &amp;&amp; ((String)$content).startsWith("estadoEmergencia")</match>
		</messageevent>
		<messageevent name="ack_estadoEmergencia" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>

		<messageevent name="estadoHeridos" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<match>$content instanceof String &amp;&amp; ((String)$content).startsWith("estadoHeridos")</match>
		</messageevent>
		<messageevent name="ack_estadoHeridos" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>

		<messageevent name="terminado_geriatrico" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
			<match>$content instanceof String &amp;&amp; ((String)$content).startsWith("terminado_geriatrico")</match>
		</messageevent>
		<messageevent name="ack_terminado_geriatrico" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>

		<messageevent name="fin_emergencia" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.REQUEST</value>
			</parameter>
		</messageevent>
		<messageevent name="ack_fin_emergencia" direction="receive" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
			<match>$content instanceof String &amp;&amp; ((String)$content).startsWith("ack_fin_emergencia")</match>
		</messageevent>
	</events>

	<configurations>
		<configuration name="default">
			<goals>
				<initialgoal ref="df_keep_registered">
					<parameter ref="description">
						<value>
							$properties.dfservice.createDFComponentDescription(null,
								$properties.dfservice.createDFServiceDescription("coordinadorEmergencias_service", "coordinadorEmergencias", "GSI DIT UPM"))
 						</value>
					</parameter>
				</initialgoal>
				<initialgoal ref="encontrarEmergencia"/>
			</goals>
		</configuration>
	</configurations>

	<properties>
		<property name="dfservice" class="IFuture">SServiceProvider.getService($scope.getServiceProvider(), IDF.class, RequiredServiceInfo.SCOPE_PLATFORM)</property>
	</properties>
</agent>