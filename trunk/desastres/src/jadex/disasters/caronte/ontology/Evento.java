/*
 * Evento.java
 *
 * Generated by Protege plugin Beanynizer. 
 * This class implements the functionality of Evento.
 * Feel free to change.
 */
package disasters.caronte.ontology;

/**
 * Editable Java class for concept <code>Evento</code> of caronte ontology.
 */
public abstract class Evento extends EventoData{
	//-------- constructors --------
	/**
	 * Default Constructor.</br>
	 * Create a new <code>Evento</code>.
	 */
	public Evento(){
		// empty constructor required for JavaBeans (do not remove).
	}

	/**
	 * Clone Constructor.</br>
	 * Create a new <code>Evento</code>.</br>
	 * Copy all attributes from <code>proto</code> to this instance.
	 *
	 * @param proto the prototype instance
	 */
	public Evento(Evento proto){
		setDescripcion(proto.getDescripcion());
		setGravedad(proto.getGravedad());
		setId(proto.getId());
		setInfo(proto.getInfo());
		setPosicion(proto.getPosicion());
	}

	//-------- custom code --------
	
	//-------- object methods -----
	/**
	 * Get a string representation of this <code>Evento</code>.
	 *
	 * @return the string representation
	 */
	public String toString(){
		return "Evento(id=" + getId() + "descripcion=" + getDescripcion() + "info=" +
			getInfo() +"gravedad=" + getGravedad() +"posicion=" + getPosicion() + ")";
	}

	/**
	 * Test the equality of this <code>Evento</code> and an object <code>obj</code>.
	 *
	 * @param obj the object this test will be performed with
	 * @return <code>false</code> if <code>obj</code> is not of <code>Evento</code> class,
	 *         <code>true</code> if all attributes are equal
	 */
	public boolean equals(Object obj){
		if(obj instanceof Evento){
			Evento cmp = (Evento) obj;
			if(getDescripcion() != cmp.getDescripcion() &&
					(getDescripcion() == null || !getDescripcion().equals(cmp.getDescripcion()))){
				return false;
			}
			if(getGravedad() != cmp.getGravedad() &&
					(getGravedad() == null || !getGravedad().equals(cmp.getGravedad()))){
				return false;
			}
			if(getId() != cmp.getId()){
				return false;
			}
			if(getInfo() != cmp.getInfo() && (getInfo() == null || !getInfo().equals(cmp.getInfo()))){
				return false;
			}
			if(getPosicion() != cmp.getPosicion() &&
					(getPosicion() == null || !getPosicion().equals(cmp.getPosicion()))){
				return false;
			}
			return true;
		}
		return false;
	}
}